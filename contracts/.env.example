# ==============================================
# GLISK NFT Contract Environment Configuration
# ==============================================
# IMPORTANT: Copy this file to .env and fill in actual values
# NEVER commit the .env file with real private keys!

# ----------------------------------------------
# Network RPC URLs
# ----------------------------------------------
# Get API keys from: Alchemy (https://www.alchemy.com), QuickNode, or Infura
BASE_MAINNET_RPC_URL=https://base-mainnet.g.alchemy.com/v2/YOUR_API_KEY
BASE_SEPOLIA_RPC_URL=https://base-sepolia.g.alchemy.com/v2/YOUR_API_KEY

# Optional: Local development
LOCALHOST_RPC_URL=http://localhost:8545

# ----------------------------------------------
# Deployment Account
# ----------------------------------------------
# CRITICAL: NEVER commit actual private keys to git!
# Use a dedicated deployment wallet with only necessary funds
PRIVATE_KEY=0x0000000000000000000000000000000000000000000000000000000000000000

# ----------------------------------------------
# Contract Configuration
# ----------------------------------------------

# NFT Collection Name
NFT_NAME="GLISK Season 0"

# NFT Collection Symbol
NFT_SYMBOL="GLISK0"

# Placeholder URI for unrevealed NFTs
# This should point to a JSON file following ERC-721 metadata standard
# Example: ipfs://QmXXXXXXXXXXXXXXXXXXXXXXXXXXXX/placeholder.json
PLACEHOLDER_URI=ipfs://QmPlaceholderHashHere/metadata.json

# Initial mint price in wei
# Target: ~$0.05 USD per mint
# Calculate based on current ETH price:
#   If ETH = $3000, then $0.05 = 0.0000166 ETH = 16600000000000 wei
#   If ETH = $2000, then $0.05 = 0.000025 ETH = 25000000000000 wei
# Example values:
#   0.001 ETH = 1000000000000000 (for testing)
#   0.00002 ETH = 20000000000000 (mainnet ~$0.05)
INITIAL_MINT_PRICE=1000000000000000

# ----------------------------------------------
# Block Explorer API Keys
# ----------------------------------------------
# Get from: https://basescan.org/apis
# Required for contract verification on Base
BASESCAN_API_KEY=YOUR_BASESCAN_API_KEY_HERE

# Optional: Ethereum mainnet (for future multi-chain deployment)
ETHERSCAN_API_KEY=YOUR_ETHERSCAN_API_KEY_HERE

# ----------------------------------------------
# Optional: Keeper Address
# ----------------------------------------------
# Address that will receive KEEPER_ROLE for operational tasks
# (updating URIs, prices, etc.)
# Leave empty to grant only to deployer initially
KEEPER_ADDRESS=

# ----------------------------------------------
# IPFS/Storage Configuration
# ----------------------------------------------
# Lighthouse.storage API key (for uploading metadata/images)
# Get from: https://lighthouse.storage
LIGHTHOUSE_API_KEY=YOUR_LIGHTHOUSE_API_KEY

# Pinata API keys (alternative IPFS provider)
PINATA_API_KEY=
PINATA_SECRET_KEY=

# ----------------------------------------------
# Deployment Options
# ----------------------------------------------
# Whether to automatically verify contract after deployment
AUTO_VERIFY=true

# Whether to grant keeper role during deployment
GRANT_KEEPER_ON_DEPLOY=false

# ----------------------------------------------
# Gas Configuration (Optional)
# ----------------------------------------------
# Gas price in gwei (leave empty for auto)
GAS_PRICE=

# Gas limit for deployment (leave empty for auto)
GAS_LIMIT=

# ----------------------------------------------
# Security Notes
# ----------------------------------------------
# 1. NEVER share or commit your PRIVATE_KEY
# 2. Use a dedicated deployment wallet with minimal funds
# 3. Test on Base Sepolia before mainnet deployment
# 4. Verify contract source code immediately after deployment
# 5. Transfer admin role to multisig after deployment
# 6. Backup deployment artifacts in deployments/ directory

server {
  listen 80;
  server_name _;

  # Handle Cloudflare SSL
  set $forwarded_proto $http_x_forwarded_proto;
  if ($forwarded_proto = '') {
    set $forwarded_proto $scheme;
  }

  # Serve built SPA
  root /usr/share/nginx/html;
  index index.html;

  # Basic hardening
  server_tokens off;
  autoindex off;
  client_max_body_size 2m;

  # Security headers
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Frame-Options "DENY" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=()" always;

  # Block access to hidden files (except .well-known)
  location ~ /\.(?!well-known) {
    return 404;
  }

  # Block only critical sensitive files
  location ~* \.(?:env|git|svn|key|keys|pem|der|p12|pfx|sh|bat|ps1|cmd|sql|dump)$ {
    return 404;
  }

  # Block common attack targets
  location ~* ^/(?:server-status|phpinfo\.php|wp-admin|wp-login\.php|wp-config\.php|setup-config\.php|_vti_pvt) {
    return 404;
  }

  # Static assets: serve with caching
  location ~* \.(?:js|css|map|svg|png|jpe?g|gif|ico|webp|woff2?|ttf|otf|json|txt|xml)$ {
    try_files $uri =404;
    expires 1h;
    add_header Cache-Control "public, max-age=3600";
  }

  # HTML files - no caching for SPA
  location ~* \.html$ {
    try_files $uri =404;
    expires -1;
    add_header Cache-Control "no-cache, no-store, must-revalidate";
  }

  # Any other file-like request -> 404
  location ~* \.[^/]+$ {
    return 404;
  }

  # SPA fallback - MUST be last
  location / {
    try_files $uri /index.html;
  }
}

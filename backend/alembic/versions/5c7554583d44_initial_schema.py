"""Initial schema

Revision ID: 5c7554583d44
Revises:
Create Date: 2025-10-16 21:27:13.770298

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "5c7554583d44"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "authors",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("wallet_address", sqlmodel.sql.sqltypes.AutoString(length=42), nullable=False),
        sa.Column("twitter_handle", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("farcaster_handle", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("prompt_text", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_authors_wallet_address"), "authors", ["wallet_address"], unique=True)
    op.create_table(
        "mint_events",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("tx_hash", sqlmodel.sql.sqltypes.AutoString(length=66), nullable=False),
        sa.Column("log_index", sa.Integer(), nullable=False),
        sa.Column("block_number", sa.Integer(), nullable=False),
        sa.Column("block_timestamp", sa.DateTime(), nullable=False),
        sa.Column("token_id", sa.Integer(), nullable=False),
        sa.Column("detected_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_mint_events_block_number"), "mint_events", ["block_number"], unique=False
    )
    op.create_index(op.f("ix_mint_events_log_index"), "mint_events", ["log_index"], unique=False)
    op.create_index(op.f("ix_mint_events_tx_hash"), "mint_events", ["tx_hash"], unique=False)
    op.create_table(
        "reveal_transactions",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("token_ids", sa.ARRAY(sa.UUID()), nullable=True),
        sa.Column("tx_hash", sqlmodel.sql.sqltypes.AutoString(length=66), nullable=True),
        sa.Column("block_number", sa.Integer(), nullable=True),
        sa.Column("gas_price_gwei", sa.Numeric(precision=20, scale=9), nullable=True),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("confirmed_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_reveal_transactions_status"), "reveal_transactions", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_reveal_transactions_tx_hash"), "reveal_transactions", ["tx_hash"], unique=False
    )
    op.create_table(
        "system_state",
        sa.Column("key", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("state_value", sa.JSON(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("key"),
    )
    op.create_table(
        "tokens_s0",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("token_id", sa.Integer(), nullable=False),
        sa.Column("author_id", sa.Uuid(), nullable=False),
        sa.Column("minter_address", sqlmodel.sql.sqltypes.AutoString(length=42), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "DETECTED",
                "GENERATING",
                "UPLOADING",
                "READY",
                "REVEALED",
                "FAILED",
                name="tokenstatus",
            ),
            nullable=False,
        ),
        sa.Column("mint_timestamp", sa.DateTime(), nullable=False),
        sa.Column("image_cid", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("metadata_cid", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("error_data", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["authors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_tokens_s0_mint_timestamp"), "tokens_s0", ["mint_timestamp"], unique=False
    )
    op.create_index(op.f("ix_tokens_s0_status"), "tokens_s0", ["status"], unique=False)
    op.create_index(op.f("ix_tokens_s0_token_id"), "tokens_s0", ["token_id"], unique=True)
    op.create_table(
        "image_generation_jobs",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("token_id", sa.Uuid(), nullable=False),
        sa.Column("service", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("external_job_id", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("retry_count", sa.Integer(), nullable=False),
        sa.Column("error_data", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["token_id"],
            ["tokens_s0.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_image_generation_jobs_token_id"),
        "image_generation_jobs",
        ["token_id"],
        unique=False,
    )
    op.create_table(
        "ipfs_upload_records",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("token_id", sa.Uuid(), nullable=False),
        sa.Column("record_type", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("cid", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("retry_count", sa.Integer(), nullable=False),
        sa.Column("error_data", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["token_id"],
            ["tokens_s0.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_ipfs_upload_records_token_id"), "ipfs_upload_records", ["token_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_ipfs_upload_records_token_id"), table_name="ipfs_upload_records")
    op.drop_table("ipfs_upload_records")
    op.drop_index(op.f("ix_image_generation_jobs_token_id"), table_name="image_generation_jobs")
    op.drop_table("image_generation_jobs")
    op.drop_index(op.f("ix_tokens_s0_token_id"), table_name="tokens_s0")
    op.drop_index(op.f("ix_tokens_s0_status"), table_name="tokens_s0")
    op.drop_index(op.f("ix_tokens_s0_mint_timestamp"), table_name="tokens_s0")
    op.drop_table("tokens_s0")
    op.drop_table("system_state")
    op.drop_index(op.f("ix_reveal_transactions_tx_hash"), table_name="reveal_transactions")
    op.drop_index(op.f("ix_reveal_transactions_status"), table_name="reveal_transactions")
    op.drop_table("reveal_transactions")
    op.drop_index(op.f("ix_mint_events_tx_hash"), table_name="mint_events")
    op.drop_index(op.f("ix_mint_events_log_index"), table_name="mint_events")
    op.drop_index(op.f("ix_mint_events_block_number"), table_name="mint_events")
    op.drop_table("mint_events")
    op.drop_index(op.f("ix_authors_wallet_address"), table_name="authors")
    op.drop_table("authors")
    # ### end Alembic commands ###
